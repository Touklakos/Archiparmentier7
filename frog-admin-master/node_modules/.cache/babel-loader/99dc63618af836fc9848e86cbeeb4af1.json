{"remainingRequest":"C:\\Users\\Jack Goodenough\\Documents\\ARCHI\\Archiparmentier7\\frog-admin-master\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Jack Goodenough\\Documents\\ARCHI\\Archiparmentier7\\frog-admin-master\\src\\plugins\\axios.js","dependencies":[{"path":"C:\\Users\\Jack Goodenough\\Documents\\ARCHI\\Archiparmentier7\\frog-admin-master\\src\\plugins\\axios.js","mtime":1585055118300},{"path":"C:\\Users\\Jack Goodenough\\Documents\\ARCHI\\Archiparmentier7\\frog-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Jack Goodenough\\Documents\\ARCHI\\Archiparmentier7\\frog-admin-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nvar config = {\n  // baseURL: process.env.baseURL || process.env.apiUrl || \"http://172.16.10.140:8080/alarm\",\n  timeout: 15 * 1000 // Timeout\n  // withCredentials: true, // Check cross-site Access-Control\n  // headers: {},\n\n};\n\nvar _axios = axios.create(config);\n\n_axios.interceptors.request.use(function (config) {\n  // Do something before request is sent\n  return config;\n}, function (error) {\n  // Do something with request error\n  return Promise.reject(error);\n}); // Add a response interceptor\n\n\n_axios.interceptors.response.use(function (response) {\n  // Do something with response data\n  return response;\n}, function (error) {\n  // Do something with response error\n  return Promise.reject(error);\n});\n\nexport default _axios;",{"version":3,"sources":["C:/Users/Jack Goodenough/Documents/ARCHI/Archiparmentier7/frog-admin-master/src/plugins/axios.js"],"names":["axios","config","timeout","_axios","create","interceptors","request","use","error","Promise","reject","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAIC,MAAM,GAAG;AACZ;AACAC,EAAAA,OAAO,EAAE,KAAK,IAFF,CAEQ;AACpB;AACA;;AAJY,CAAb;;AAOA,IAAMC,MAAM,GAAGH,KAAK,CAACI,MAAN,CAAaH,MAAb,CAAf;;AAEAE,MAAM,CAACE,YAAP,CAAoBC,OAApB,CAA4BC,GAA5B,CACC,UAAUN,MAAV,EAAkB;AACjB;AACA,SAAOA,MAAP;AACA,CAJF,EAKC,UAAUO,KAAV,EAAiB;AAChB;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACA,CARF,E,CAWA;;;AACAL,MAAM,CAACE,YAAP,CAAoBM,QAApB,CAA6BJ,GAA7B,CACC,UAAUI,QAAV,EAAoB;AACnB;AACA,SAAOA,QAAP;AACA,CAJF,EAKC,UAAUH,KAAV,EAAiB;AAChB;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACA,CARF;;AAWA,eAAeL,MAAf","sourcesContent":["import axios from 'axios'\r\n\r\nlet config = {\r\n\t// baseURL: process.env.baseURL || process.env.apiUrl || \"http://172.16.10.140:8080/alarm\",\r\n\ttimeout: 15 * 1000, // Timeout\r\n\t// withCredentials: true, // Check cross-site Access-Control\r\n\t// headers: {},\r\n};\r\n\r\nconst _axios = axios.create(config);\r\n\r\n_axios.interceptors.request.use(\r\n\tfunction (config) {\r\n\t\t// Do something before request is sent\r\n\t\treturn config;\r\n\t},\r\n\tfunction (error) {\r\n\t\t// Do something with request error\r\n\t\treturn Promise.reject(error);\r\n\t}\r\n);\r\n\r\n// Add a response interceptor\r\n_axios.interceptors.response.use(\r\n\tfunction (response) {\r\n\t\t// Do something with response data\r\n\t\treturn response;\r\n\t},\r\n\tfunction (error) {\r\n\t\t// Do something with response error\r\n\t\treturn Promise.reject(error);\r\n\t}\r\n);\r\n\r\nexport default _axios;\r\n"]}]}